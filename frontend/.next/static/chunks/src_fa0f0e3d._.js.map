{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/coding/MERN/relasto/frontend/src/stores/authStore.tsx"],"sourcesContent":["import { create } from \"zustand\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: \"user\" | \"agent\";\r\n}\r\n\r\ninterface AuthState {\r\n    user: User | null;\r\n    loading: boolean;\r\n    error: string | null;\r\n    isAuthenticated: boolean;\r\n\r\n    //actions\r\n    login: (userData: { email: string; password: string }) => void;\r\n    logout: () => void;\r\n    register: (userData: { name: string; email: string; password: string; phoneNumber: string; role: \"user\" | \"agent\" }) => void;\r\n    fetchProfile: () => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>((set, get) => ({\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n\r\n  // Computed property\r\n  get isAuthenticated() {\r\n    return get().user !== null;\r\n  },\r\n\r\n     login: async (userData: { email: string; password: string }) => {\r\n    try {\r\n        set({ loading: true, error: null });\r\n        const response = await axios.post(`/api/auth/login`, userData, {\r\n            withCredentials: true,\r\n        });\r\n        set({ user: response.data.user, loading: false });\r\n    } catch (error: any) {\r\n        const errorMessage = error.response?.data?.message || error.message || \"Login failed\";\r\n        set({ loading: false, error: errorMessage });\r\n        console.log(\"error in login:\", error.response?.data);\r\n        throw error;\r\n    }\r\n   },\r\n\r\n   register: async (userData) => {\r\n    try {\r\n      set({ loading: true, error: null });\r\n      const response = await axios.post(`/api/auth/register`, userData, {\r\n        withCredentials: true,\r\n      });\r\n      set({ user: response.data.user, loading: false });\r\n    } catch (error: any) {\r\n      const errorMessage = error.response?.data?.message || error.message || \"Registration failed\";\r\n      set({ loading: false, error: errorMessage });\r\n      console.log(\"Backend error:\", error.response?.data);\r\n      throw error;\r\n    }\r\n  },\r\n  fetchProfile: async () => {\r\n    try {\r\n        set({loading: true , error: null})\r\n        const response = await axios.get(`/api/auth/my-profile`)\r\n        set({user: response.data.user , loading: false})\r\n    } catch (error: any) {\r\n        set({loading: false , error: error.message})\r\n        console.log(\"Error in get profile\" , error.response?.data)\r\n        throw error\r\n    }\r\n  },\r\n  logout: async () => {\r\n    try {\r\n      set({ loading: true, error: null });\r\n      await axios.post(`/api/auth/logout`);\r\n      set({ user: null, loading: false });\r\n    } catch (error: any) {\r\n      set({ loading: false, error: error.message });\r\n      console.log(\"error in register\" , error.response.data);\r\n      throw error\r\n    }\r\n  },\r\n}));\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,eAAe,GAAG;AAsB1B,MAAM,eAAe,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAa,CAAC,KAAK,MAAQ,CAAC;QAC3D,MAAM;QACN,SAAS;QACT,OAAO;QAEP,oBAAoB;QACpB,IAAI,mBAAkB;YACpB,OAAO,MAAM,IAAI,KAAK;QACxB;QAEG,OAAO,OAAO;YACf,IAAI;gBACA,IAAI;oBAAE,SAAS;oBAAM,OAAO;gBAAK;gBACjC,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,EAAE,UAAU;oBAC3D,iBAAiB;gBACrB;gBACA,IAAI;oBAAE,MAAM,SAAS,IAAI,CAAC,IAAI;oBAAE,SAAS;gBAAM;YACnD,EAAE,OAAO,OAAY;gBACjB,MAAM,eAAe,MAAM,QAAQ,EAAE,MAAM,WAAW,MAAM,OAAO,IAAI;gBACvE,IAAI;oBAAE,SAAS;oBAAO,OAAO;gBAAa;gBAC1C,QAAQ,GAAG,CAAC,mBAAmB,MAAM,QAAQ,EAAE;gBAC/C,MAAM;YACV;QACD;QAEA,UAAU,OAAO;YAChB,IAAI;gBACF,IAAI;oBAAE,SAAS;oBAAM,OAAO;gBAAK;gBACjC,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,EAAE,UAAU;oBAChE,iBAAiB;gBACnB;gBACA,IAAI;oBAAE,MAAM,SAAS,IAAI,CAAC,IAAI;oBAAE,SAAS;gBAAM;YACjD,EAAE,OAAO,OAAY;gBACnB,MAAM,eAAe,MAAM,QAAQ,EAAE,MAAM,WAAW,MAAM,OAAO,IAAI;gBACvE,IAAI;oBAAE,SAAS;oBAAO,OAAO;gBAAa;gBAC1C,QAAQ,GAAG,CAAC,kBAAkB,MAAM,QAAQ,EAAE;gBAC9C,MAAM;YACR;QACF;QACA,cAAc;YACZ,IAAI;gBACA,IAAI;oBAAC,SAAS;oBAAO,OAAO;gBAAI;gBAChC,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,oBAAoB,CAAC;gBACvD,IAAI;oBAAC,MAAM,SAAS,IAAI,CAAC,IAAI;oBAAG,SAAS;gBAAK;YAClD,EAAE,OAAO,OAAY;gBACjB,IAAI;oBAAC,SAAS;oBAAQ,OAAO,MAAM,OAAO;gBAAA;gBAC1C,QAAQ,GAAG,CAAC,wBAAyB,MAAM,QAAQ,EAAE;gBACrD,MAAM;YACV;QACF;QACA,QAAQ;YACN,IAAI;gBACF,IAAI;oBAAE,SAAS;oBAAM,OAAO;gBAAK;gBACjC,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC;gBACnC,IAAI;oBAAE,MAAM;oBAAM,SAAS;gBAAM;YACnC,EAAE,OAAO,OAAY;gBACnB,IAAI;oBAAE,SAAS;oBAAO,OAAO,MAAM,OAAO;gBAAC;gBAC3C,QAAQ,GAAG,CAAC,qBAAsB,MAAM,QAAQ,CAAC,IAAI;gBACrD,MAAM;YACR;QACF;IACF,CAAC","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/coding/MERN/relasto/frontend/src/app/layout.tsx"],"sourcesContent":["\"use client\"\nimport \"./globals.css\";\nimport { Toaster } from 'react-hot-toast'\nimport { useAuthStore } from \"@/stores/authStore\";\nimport { useEffect } from \"react\";\n\n\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n\n  const { fetchProfile } = useAuthStore()\n\n  useEffect(() => {\n    fetchProfile()\n  } , [fetchProfile])\n  return (\n    <html lang=\"en\">\n      <body>\n        {children}\n        <Toaster />\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;;AAQe,SAAS,WAAW,EACjC,QAAQ,EAGR;;IAEA,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,eAAY,AAAD;IAEpC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR;QACF;+BAAI;QAAC;KAAa;IAClB,qBACE,6LAAC;QAAK,MAAK;kBACT,cAAA,6LAAC;;gBACE;8BACD,6LAAC,0JAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB;GAnBwB;;QAMG,8HAAA,CAAA,eAAY;;;KANf","debugId":null}}]
}